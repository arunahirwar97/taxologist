# Generated by Django 3.2.12 on 2022-03-16 06:57

import ckeditor.fields
import core.storage_backends
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='business_fianl_tax_planner2_year_data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'verbose_name': 'business_fianl_tax_planner2_year_data',
            },
        ),
        migrations.CreateModel(
            name='business_fianl_tax_planner_question_and_answer_data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pan_card_numnber', models.CharField(blank=True, default=None, max_length=5000, null=True)),
                ('data_of_question', models.CharField(blank=True, default=None, max_length=5000, null=True)),
                ('data_of_answer', models.CharField(blank=True, default=None, max_length=50000, null=True)),
                ('year', models.CharField(blank=True, default=None, max_length=5000, null=True)),
                ('block_heading', models.CharField(blank=True, default=None, max_length=5000, null=True)),
                ('name', models.CharField(blank=True, default=None, max_length=6000, null=True)),
                ('main_heading', models.CharField(blank=True, default=None, max_length=50000, null=True)),
                ('current_date', models.CharField(blank=True, max_length=200, null=True)),
                ('current_time', models.CharField(blank=True, max_length=200, null=True)),
                ('plan_code', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name': 'fianl_tax_planner_question_and_answer_data',
            },
        ),
        migrations.CreateModel(
            name='business_gst_dashboard_checklist_selectbox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checklist_select', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'verbose_name': 'business_gst_dashboard_checklist_selectbox',
            },
        ),
        migrations.CreateModel(
            name='business_help_page_data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('help_center_title', models.CharField(blank=True, max_length=5000, null=True)),
                ('help_center_title_page_link', models.CharField(blank=True, max_length=5000, null=True)),
                ('help_center_description', models.TextField(blank=True, max_length=5000, null=True)),
                ('background_color_name', models.CharField(blank=True, max_length=5000, null=True)),
                ('background_color_code', models.CharField(blank=True, max_length=5000, null=True)),
            ],
            options={
                'verbose_name': 'business help page data ',
            },
        ),
        migrations.CreateModel(
            name='business_income_tax_dashboard_checklist_selectbox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checklist_select', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'verbose_name': 'dashboard_checklist_selectbox',
            },
        ),
        migrations.CreateModel(
            name='business_Tax_Plan_Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_heading', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('tax_plan_name', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('order', models.IntegerField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name': 'Tax Planner',
            },
        ),
        migrations.CreateModel(
            name='business_Tax_Plan_Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('plan_code', models.CharField(blank=True, choices=[('ITR 4', 'ITR 4'), ('ITR 5', 'ITR 5'), ('ITR 6', 'ITR 6'), ('ITR 7', 'ITR 7')], max_length=5)),
                ('order', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='business_tax_planner_answer_question_year',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(blank=True, default=None, max_length=1000, null=True)),
                ('pan_card_number', models.CharField(blank=True, default=None, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='business_tax_planner_main_heading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=5000)),
                ('tax_plan_name', models.CharField(blank=True, default=None, max_length=5000, null=True)),
                ('pan_card_number', models.CharField(blank=True, default=None, max_length=1000, null=True)),
                ('current_time', models.CharField(blank=True, default=None, max_length=1000)),
                ('current_date', models.CharField(blank=True, default=None, max_length=1000)),
                ('plan_code', models.CharField(blank=True, default=None, max_length=1000)),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tax Plan main heading And block heading ',
            },
        ),
        migrations.CreateModel(
            name='gst_dashbaord_data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(blank=True, max_length=500, null=True)),
                ('months', models.CharField(blank=True, max_length=500, null=True)),
                ('gstin', models.CharField(blank=True, max_length=500, null=True)),
                ('trade_name', models.CharField(blank=True, max_length=500, null=True)),
                ('gst3_pdf', models.FileField(blank=True, null=True, storage=core.storage_backends.PrivateMediaStorage(), upload_to='GST3/')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'gst_dashbaord_data',
            },
        ),
        migrations.CreateModel(
            name='Tax_paid_through_ITC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description_for_Tax_paid_through_ITC', models.CharField(blank=True, choices=[('(A) Other than reverse charge', '(A) Other than reverse charge'), ('(B) Reverse charge', '(B) Reverse charge')], max_length=5000, null=True)),
                ('field_choose', models.CharField(blank=True, choices=[('Integrated Tax', 'Integrated Tax'), ('Central Tax', 'Central Tax'), ('State UT Tax', 'State UT Tax'), ('Cess', 'Cess')], max_length=5000, null=True)),
                ('Integrated_Tax', models.CharField(blank=True, max_length=5000, null=True)),
                ('Central_Tax', models.CharField(blank=True, max_length=5000, null=True)),
                ('State_UT_Tax', models.CharField(blank=True, max_length=5000, null=True)),
                ('Cess', models.CharField(blank=True, max_length=5000, null=True)),
                ('gst_dashbaord_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='business.gst_dashbaord_data')),
            ],
            options={
                'verbose_name': 'Tax_paid_through_ITC',
            },
        ),
        migrations.CreateModel(
            name='payment_of_tax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Description', models.CharField(blank=True, choices=[('(A) Other than reverse charge', '(A) Other than reverse charge'), ('(B) Reverse charge', '(B) Reverse charge')], max_length=5000, null=True)),
                ('Description_choose', models.CharField(blank=True, choices=[('Integrated Tax', 'Integrated Tax'), ('Central Tax', 'Central Tax'), ('State UT Tax', 'State UT Tax'), ('Cess', 'Cess')], max_length=5000, null=True)),
                ('interest_paid_in_cash', models.CharField(blank=True, max_length=5000, null=True)),
                ('late_fee_paid_in_cash', models.CharField(blank=True, max_length=5000, null=True)),
                ('Total_Tax_payable', models.CharField(blank=True, max_length=5000, null=True)),
                ('Tax_paid_in_cash', models.CharField(blank=True, max_length=5000, null=True)),
                ('Tax_paid_through_ITC', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='business.tax_paid_through_itc')),
                ('gst_dashbaord_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='business.gst_dashbaord_data')),
            ],
            options={
                'verbose_name': 'payment_of_tax',
            },
        ),
        migrations.CreateModel(
            name='Eligible_ITC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Details', models.CharField(blank=True, choices=[('Net ITC available (A-B)', 'Net ITC available (A-B)'), ('Ineligible ITC', 'Ineligible ITC')], max_length=5000, null=True)),
                ('Integrated_Tax', models.CharField(blank=True, max_length=5000, null=True)),
                ('Central_Tax', models.CharField(blank=True, max_length=5000, null=True)),
                ('State_UT_Tax', models.CharField(blank=True, max_length=5000, null=True)),
                ('Cess', models.CharField(blank=True, max_length=5000, null=True)),
                ('gst_dashbaord_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='business.gst_dashbaord_data')),
            ],
            options={
                'verbose_name': 'Eligible_ITC',
            },
        ),
        migrations.CreateModel(
            name='Details_of_Outward_supplies_and_inward_supplies_liable_to_reverse_charge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nature_of_Supplies', models.CharField(blank=True, max_length=5000, null=True)),
                ('Total_Taxable_Value', models.CharField(blank=True, max_length=5000, null=True)),
                ('Integrated_Tax', models.CharField(blank=True, max_length=5000, null=True)),
                ('Central_Tax', models.CharField(blank=True, max_length=5000, null=True)),
                ('State_UT_Tax', models.CharField(blank=True, max_length=5000, null=True)),
                ('Cess', models.CharField(blank=True, max_length=5000, null=True)),
                ('gst_dashbaord_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='business.gst_dashbaord_data')),
            ],
            options={
                'verbose_name': 'Details_of_Outward_supplies_and_inward_supplies_liable_to_reverse_charge',
            },
        ),
        migrations.CreateModel(
            name='case_ledgel_and_credit_ledgle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_ledgel', models.CharField(blank=True, max_length=500, null=True)),
                ('credit_ledgel', models.CharField(blank=True, max_length=500, null=True)),
                ('gst_dashbaord_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='business.gst_dashbaord_data')),
            ],
            options={
                'verbose_name': 'case_ledgel_and_credit_ledgle',
            },
        ),
        migrations.CreateModel(
            name='business_tax_planner_question_and_answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('pan_card_number', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('name', models.CharField(blank=True, default=None, max_length=5000, null=True)),
                ('question', ckeditor.fields.RichTextField(blank=True, default=None, max_length=5000, null=True)),
                ('answer', ckeditor.fields.RichTextField(blank=True, default=None, max_length=5000, null=True)),
                ('user_answer', models.CharField(blank=True, default=None, max_length=5000, null=True)),
                ('current_time', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('current_date', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('main_heading', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('block_heading', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('block', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='business.business_tax_planner_main_heading')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='business_tax_planner_2_question_answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pan_card_numnber', models.CharField(blank=True, default=None, max_length=5000, null=True)),
                ('user_name', models.CharField(blank=True, default=None, max_length=5000, null=True)),
                ('data_of_question', models.CharField(blank=True, default=None, max_length=50000, null=True)),
                ('suggestion_answer', models.CharField(blank=True, default=None, max_length=50000, null=True)),
                ('user_answer', models.CharField(blank=True, default=None, max_length=50000, null=True)),
                ('year', models.CharField(blank=True, default=None, max_length=5000, null=True)),
                ('block_heading', models.CharField(blank=True, default=None, max_length=5000, null=True)),
                ('name', models.CharField(blank=True, default=None, max_length=6000, null=True)),
                ('main_heading', models.CharField(blank=True, max_length=5000, null=True)),
                ('current_date', models.CharField(blank=True, max_length=20, null=True)),
                ('current_time', models.CharField(blank=True, max_length=20, null=True)),
                ('tax_plan_name', models.CharField(blank=True, max_length=20, null=True)),
                ('plan_code', models.CharField(blank=True, max_length=200, null=True)),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'tax_planner_2_question_answer',
            },
        ),
        migrations.CreateModel(
            name='business_Tax_Plan_Fields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', ckeditor.fields.RichTextField(blank=True, default=None, max_length=5000, null=True)),
                ('yes_answer', ckeditor.fields.RichTextField(blank=True, default=None, max_length=5000, null=True)),
                ('no_answer', ckeditor.fields.RichTextField(blank=True, default=None, max_length=5000, null=True)),
                ('order', models.IntegerField(blank=True, default=None, null=True)),
                ('block', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='business.business_tax_plan_block')),
            ],
        ),
        migrations.AddField(
            model_name='business_tax_plan_block',
            name='heading',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='business.business_tax_plan_page'),
        ),
        migrations.CreateModel(
            name='Business_Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bussines_catagory', models.CharField(blank=True, choices=[('ptn', 'Partnership'), ('pco', 'Private Company/OPC'), ('pc', 'Public Company'), ('nc', 'NPO Company'), ('sngo', 'Sociaty/NGO'), ('sp', 'Sole proprietor'), ('nri', 'NRI')], max_length=4)),
                ('name', models.CharField(blank=True, max_length=50)),
                ('firm_name', models.CharField(blank=True, max_length=50)),
                ('company_name', models.CharField(blank=True, max_length=50)),
                ('c_i_n', models.CharField(blank=True, max_length=50)),
                ('pan_number', models.CharField(blank=True, max_length=30)),
                ('mobile_number', models.CharField(blank=True, max_length=12)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('r_no_c_i_n', models.CharField(blank=True, max_length=50)),
                ('registration_number', models.CharField(blank=True, max_length=50)),
                ('u_i_n', models.CharField(blank=True, max_length=50)),
                ('tan_number', models.CharField(blank=True, default='none', max_length=20)),
                ('account_number', models.CharField(blank=True, default='none', max_length=30)),
                ('ifsc_code', models.CharField(blank=True, default='none', max_length=20)),
                ('bank_name', models.CharField(blank=True, default='none', max_length=100)),
                ('postal_code', models.CharField(blank=True, default='none', max_length=20)),
                ('aadhar_number', models.CharField(blank=True, default='none', max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='business_incometax_dashbaord_super_user_registrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('pan_card_number', models.CharField(max_length=15)),
                ('reg_status', models.CharField(max_length=20)),
                ('xmlfile', models.FileField(upload_to='business_incometax_dashbaord_super_user_registrations')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'business_incometax_dashbaord_super_user_registrations without XML Registration',
            },
        ),
        migrations.CreateModel(
            name='BUSINESS_INCOME_TAX_DASHBOARD_XMLFileData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xmlns_ns3', models.CharField(blank=True, max_length=1000, null=True)),
                ('xmlns', models.CharField(blank=True, max_length=1000, null=True)),
                ('xmlns_ns2', models.CharField(blank=True, max_length=1000, null=True)),
                ('SWVersionNo', models.CharField(blank=True, max_length=1000, null=True)),
                ('SWCreatedBy', models.CharField(blank=True, max_length=1000, null=True)),
                ('XMLCreatedBy', models.CharField(blank=True, max_length=1000, null=True)),
                ('XMLCreationDate', models.CharField(blank=True, max_length=1000, null=True)),
                ('IntermediaryCity', models.CharField(blank=True, max_length=1000, null=True)),
                ('Digest', models.CharField(blank=True, max_length=1000, null=True)),
                ('FormName', models.CharField(blank=True, max_length=1000, null=True)),
                ('Description', models.CharField(blank=True, max_length=1000, null=True)),
                ('AssessmentYear', models.CharField(blank=True, max_length=1000, null=True)),
                ('SchemaVer', models.CharField(blank=True, max_length=1000, null=True)),
                ('FormVer', models.CharField(blank=True, max_length=1000, null=True)),
                ('FirstName', models.CharField(blank=True, max_length=1000, null=True)),
                ('SurNameOrOrgName', models.CharField(blank=True, max_length=1000, null=True)),
                ('PAN', models.CharField(blank=True, max_length=1000, null=True)),
                ('ResidenceNo', models.CharField(blank=True, max_length=1000, null=True)),
                ('RoadOrStreet', models.CharField(blank=True, max_length=1000, null=True)),
                ('LocalityOrArea', models.CharField(blank=True, max_length=1000, null=True)),
                ('CityOrTownOrDistrict', models.CharField(blank=True, max_length=1000, null=True)),
                ('StateCode', models.CharField(blank=True, max_length=1000, null=True)),
                ('CountryCode', models.CharField(blank=True, max_length=1000, null=True)),
                ('PinCode', models.CharField(blank=True, max_length=1000, null=True)),
                ('CountryCodeMobile', models.CharField(blank=True, max_length=1000, null=True)),
                ('MobileNo', models.CharField(blank=True, max_length=1000, null=True)),
                ('EmailAddress', models.CharField(blank=True, max_length=1000, null=True)),
                ('DOB', models.CharField(blank=True, max_length=1000, null=True)),
                ('EmployerCategory', models.CharField(blank=True, max_length=1000, null=True)),
                ('AadhaarCardNo', models.CharField(blank=True, max_length=1000, null=True)),
                ('ReturnFileSec', models.CharField(blank=True, max_length=1000, null=True)),
                ('SeventhProvisio139', models.CharField(blank=True, max_length=1000, null=True)),
                ('GrossSalary', models.CharField(blank=True, max_length=1000, null=True)),
                ('Salary', models.CharField(blank=True, max_length=1000, null=True)),
                ('PerquisitesValue', models.CharField(blank=True, max_length=1000, null=True)),
                ('ProfitsInSalary', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalAllwncExemptUs10', models.CharField(blank=True, max_length=1000, null=True)),
                ('NetSalary', models.CharField(blank=True, max_length=1000, null=True)),
                ('DeductionUs16', models.CharField(blank=True, max_length=1000, null=True)),
                ('DeductionUs16ia', models.CharField(blank=True, max_length=1000, null=True)),
                ('EntertainmentAlw16ii', models.CharField(blank=True, max_length=1000, null=True)),
                ('ProfessionalTaxUs16iii', models.CharField(blank=True, max_length=1000, null=True)),
                ('IncomeFromSal', models.CharField(blank=True, max_length=1000, null=True)),
                ('TypeOfHP', models.CharField(blank=True, max_length=1000, null=True)),
                ('GrossRentReceived', models.CharField(blank=True, max_length=1000, null=True)),
                ('TaxPaidlocalAuth', models.CharField(blank=True, max_length=1000, null=True)),
                ('AnnualValue', models.CharField(blank=True, max_length=1000, null=True)),
                ('StandardDeduction', models.CharField(blank=True, max_length=1000, null=True)),
                ('InterestPayable', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalIncomeOfHP', models.CharField(blank=True, max_length=1000, null=True)),
                ('IncomeOthSrc', models.CharField(blank=True, max_length=1000, null=True)),
                ('DeductionUs57iia', models.CharField(blank=True, max_length=1000, null=True)),
                ('GrossTotIncome', models.CharField(blank=True, max_length=1000, null=True)),
                ('DepPayInvClmUndDednVIA', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80C', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80CCC', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80CCDEmployeeOrSE', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80CCD1B', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80CCDEmployer', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80D', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80DD', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80DDB', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80E', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80EE', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80EEA', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80EEB', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80G', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80GG', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80GGA', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80GGC', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80U', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80TTA', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80TTB', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalChapVIADeductions', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalIncome', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalTaxPayable', models.CharField(blank=True, max_length=1000, null=True)),
                ('Rebate87A', models.CharField(blank=True, max_length=1000, null=True)),
                ('TaxPayableOnRebate', models.CharField(blank=True, max_length=1000, null=True)),
                ('EducationCess', models.CharField(blank=True, max_length=1000, null=True)),
                ('GrossTaxLiability', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section89', models.CharField(blank=True, max_length=1000, null=True)),
                ('NetTaxLiability', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalIntrstPay', models.CharField(blank=True, max_length=1000, null=True)),
                ('IntrstPayUs234A', models.CharField(blank=True, max_length=1000, null=True)),
                ('IntrstPayUs234B', models.CharField(blank=True, max_length=1000, null=True)),
                ('IntrstPayUs234C', models.CharField(blank=True, max_length=1000, null=True)),
                ('LateFilingFee234F', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotTaxPlusIntrstPay', models.CharField(blank=True, max_length=1000, null=True)),
                ('AdvanceTax', models.CharField(blank=True, max_length=1000, null=True)),
                ('TDS', models.CharField(blank=True, max_length=1000, null=True)),
                ('TCS', models.CharField(blank=True, max_length=1000, null=True)),
                ('SelfAssessmentTax', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalTaxesPaid', models.CharField(blank=True, max_length=1000, null=True)),
                ('BalTaxPayable', models.CharField(blank=True, max_length=1000, null=True)),
                ('RefundDue', models.CharField(blank=True, max_length=1000, null=True)),
                ('IFSCCode', models.CharField(blank=True, max_length=1000, null=True)),
                ('BankName', models.CharField(blank=True, max_length=1000, null=True)),
                ('BankAccountNo', models.CharField(blank=True, max_length=1000, null=True)),
                ('UseForRefund', models.CharField(blank=True, max_length=1000, null=True)),
                ('ScheduleDI', models.CharField(blank=True, max_length=1000, null=True)),
                ('SeniorCitizenFlag', models.CharField(blank=True, max_length=1000, null=True)),
                ('SelfAndFamily', models.CharField(blank=True, max_length=1000, null=True)),
                ('HealthInsPremSlfFam', models.CharField(blank=True, max_length=1000, null=True)),
                ('SelfAndFamilySeniorCitizen', models.CharField(blank=True, max_length=1000, null=True)),
                ('HlthInsPremSlfFamSrCtzn', models.CharField(blank=True, max_length=1000, null=True)),
                ('PrevHlthChckUpSlfFam', models.CharField(blank=True, max_length=1000, null=True)),
                ('PrevHlthChckUpSlfFamSrCtzn', models.CharField(blank=True, max_length=1000, null=True)),
                ('MedicalExpSlfFamSrCtzn', models.CharField(blank=True, max_length=1000, null=True)),
                ('ParentsSeniorCitizenFlag', models.CharField(blank=True, max_length=1000, null=True)),
                ('Parents', models.CharField(blank=True, max_length=1000, null=True)),
                ('HlthInsPremParents', models.CharField(blank=True, max_length=1000, null=True)),
                ('PrevHlthChckUpParents', models.CharField(blank=True, max_length=1000, null=True)),
                ('ParentsSeniorCitizen', models.CharField(blank=True, max_length=1000, null=True)),
                ('HlthInsPremParentsSrCtzn', models.CharField(blank=True, max_length=1000, null=True)),
                ('PrevHlthChckUpParentsSrCtzn', models.CharField(blank=True, max_length=1000, null=True)),
                ('MedicalExpParentsSrCtzn', models.CharField(blank=True, max_length=1000, null=True)),
                ('EligibleAmountOfDedn', models.CharField(blank=True, max_length=1000, null=True)),
                ('TAN', models.CharField(blank=True, max_length=1000, null=True)),
                ('EmployerOrDeductorOrCollecterName', models.CharField(blank=True, max_length=1000, null=True)),
                ('IncChrgSal', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalTDSSal', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalTDSonSalaries', models.CharField(blank=True, max_length=1000, null=True)),
                ('AssesseeVerName', models.CharField(blank=True, max_length=1000, null=True)),
                ('FatherName', models.CharField(blank=True, max_length=1000, null=True)),
                ('AssesseeVerPAN', models.CharField(blank=True, max_length=1000, null=True)),
                ('Capacity', models.CharField(blank=True, max_length=1000, null=True)),
                ('Place', models.CharField(blank=True, max_length=1000, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='business_income_tax_dashboard_checklist_selectbox_main_data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checklist_data', models.CharField(blank=True, max_length=500, null=True)),
                ('checklist_data_id', models.IntegerField()),
                ('checklist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='business.business_income_tax_dashboard_checklist_selectbox')),
            ],
            options={
                'verbose_name': 'dashboard_checklist_selectbox_data',
            },
        ),
        migrations.CreateModel(
            name='BUSINESS_INCOME_TAX_DASHBAORD_XMLFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xmlfile', models.FileField(storage=core.storage_backends.PrivateMediaStorage(), upload_to='business_income_tax/xml_file/')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BUSINESS_INCOME_TAX_DASHBAORD_JSON_FILEDATA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xmlns_ns3', models.CharField(blank=True, max_length=1000, null=True)),
                ('xmlns', models.CharField(blank=True, max_length=1000, null=True)),
                ('xmlns_ns2', models.CharField(blank=True, max_length=1000, null=True)),
                ('XMLCreatedBy', models.CharField(blank=True, max_length=1000, null=True)),
                ('XMLCreationDate', models.CharField(blank=True, max_length=1000, null=True)),
                ('SWVersionNo', models.CharField(blank=True, max_length=1000, null=True)),
                ('SWCreatedBy', models.CharField(blank=True, max_length=1000, null=True)),
                ('JSONCreatedBy', models.CharField(blank=True, max_length=1000, null=True)),
                ('JSONCreationDate', models.CharField(blank=True, max_length=1000, null=True)),
                ('Digest', models.CharField(blank=True, max_length=1000, null=True)),
                ('IntermediaryCity', models.CharField(blank=True, max_length=1000, null=True)),
                ('FormName', models.CharField(blank=True, max_length=1000, null=True)),
                ('Description', models.CharField(blank=True, max_length=1000, null=True)),
                ('AssessmentYear', models.CharField(blank=True, max_length=1000, null=True)),
                ('SchemaVer', models.CharField(blank=True, max_length=1000, null=True)),
                ('FormVer', models.CharField(blank=True, max_length=1000, null=True)),
                ('FirstName', models.CharField(blank=True, max_length=1000, null=True)),
                ('SurNameOrOrgName', models.CharField(blank=True, max_length=1000, null=True)),
                ('ResidenceNo', models.CharField(blank=True, max_length=1000, null=True)),
                ('ResidenceName', models.CharField(blank=True, max_length=1000, null=True)),
                ('RoadOrStreet', models.CharField(blank=True, max_length=1000, null=True)),
                ('LocalityOrArea', models.CharField(blank=True, max_length=1000, null=True)),
                ('CityOrTownOrDistrict', models.CharField(blank=True, max_length=1000, null=True)),
                ('StateCode', models.CharField(blank=True, max_length=1000, null=True)),
                ('CountryCode', models.CharField(blank=True, max_length=1000, null=True)),
                ('PinCode', models.CharField(blank=True, max_length=1000, null=True)),
                ('CountryCodeMobile', models.CharField(blank=True, max_length=1000, null=True)),
                ('MobileNo', models.CharField(blank=True, max_length=1000, null=True)),
                ('EmailAddress', models.CharField(blank=True, max_length=1000, null=True)),
                ('PAN', models.CharField(blank=True, max_length=1000, null=True)),
                ('DOB', models.CharField(blank=True, max_length=1000, null=True)),
                ('EmployerCategory', models.CharField(blank=True, max_length=1000, null=True)),
                ('AadhaarCardNo', models.CharField(blank=True, max_length=1000, null=True)),
                ('ReturnFileSec', models.CharField(blank=True, max_length=1000, null=True)),
                ('NewTaxRegime', models.CharField(blank=True, max_length=1000, null=True)),
                ('SeventhProvisio139', models.CharField(blank=True, max_length=1000, null=True)),
                ('ReturnType', models.CharField(blank=True, max_length=1000, null=True)),
                ('ResidentialStatus', models.CharField(blank=True, max_length=1000, null=True)),
                ('PortugeseCC5A', models.CharField(blank=True, max_length=1000, null=True)),
                ('DepAmtAggAmtExcd1CrPrYrFlg', models.CharField(blank=True, max_length=1000, null=True)),
                ('IncrExpAggAmt2LkTrvFrgnCntryFlg', models.CharField(blank=True, max_length=1000, null=True)),
                ('IncrExpAggAmt1LkElctrctyPrYrFlg', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalAllwncExemptUs10', models.CharField(blank=True, max_length=1000, null=True)),
                ('OthSrcNatureDesc', models.CharField(blank=True, max_length=1000, null=True)),
                ('OthSrcOthNatOfInc', models.CharField(blank=True, max_length=1000, null=True)),
                ('OthSrcOthAmount', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80RRB', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80QQB', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80CCG', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80C', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80CCC', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80CCDEmployeeOrSE', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80CCD1B', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80CCDEmployer', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80D', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80DD', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80DDB', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80E', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80EE', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80EEA', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80EEB', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80G', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80GG', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80GGA', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80GGC', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80U', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80TTA', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section80TTB', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalChapVIADeductions', models.CharField(blank=True, max_length=1000, null=True)),
                ('ExemptIncAgriOthUs10Total', models.CharField(blank=True, max_length=1000, null=True)),
                ('GrossSalary', models.CharField(blank=True, max_length=1000, null=True)),
                ('Salary', models.CharField(blank=True, max_length=1000, null=True)),
                ('PerquisitesValue', models.CharField(blank=True, max_length=1000, null=True)),
                ('ProfitsInSalary', models.CharField(blank=True, max_length=1000, null=True)),
                ('NetSalary', models.CharField(blank=True, max_length=1000, null=True)),
                ('TaxPaidlocalAuth', models.CharField(blank=True, max_length=1000, null=True)),
                ('DeductionUs16', models.CharField(blank=True, max_length=1000, null=True)),
                ('DeductionUs16ia', models.CharField(blank=True, max_length=1000, null=True)),
                ('EntertainmentAlw16ii', models.CharField(blank=True, max_length=1000, null=True)),
                ('ProfessionalTaxUs16iii', models.CharField(blank=True, max_length=1000, null=True)),
                ('IncomeFromSal', models.CharField(blank=True, max_length=1000, null=True)),
                ('TypeOfHP', models.CharField(blank=True, max_length=1000, null=True)),
                ('GrossRentReceived', models.CharField(blank=True, max_length=1000, null=True)),
                ('AnnualValue', models.CharField(blank=True, max_length=1000, null=True)),
                ('StandardDeduction', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalIncomeOfHP', models.CharField(blank=True, max_length=1000, null=True)),
                ('IncomeOthSrc', models.CharField(blank=True, max_length=1000, null=True)),
                ('DeductionUs57iia', models.CharField(blank=True, max_length=1000, null=True)),
                ('GrossTotIncome', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalIncome', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalDonationsUs80GGA', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalDonationAmtCash80GGA', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalDonationAmtOtherMode80GGA', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalEligibleDonationAmt80GGA', models.CharField(blank=True, max_length=1000, null=True)),
                ('IntrstPayUs234A', models.CharField(blank=True, max_length=1000, null=True)),
                ('IntrstPayUs234B', models.CharField(blank=True, max_length=1000, null=True)),
                ('IntrstPayUs234C', models.CharField(blank=True, max_length=1000, null=True)),
                ('LateFilingFee234F', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalTaxPayable', models.CharField(blank=True, max_length=1000, null=True)),
                ('Rebate87A', models.CharField(blank=True, max_length=1000, null=True)),
                ('TaxPayableOnRebate', models.CharField(blank=True, max_length=1000, null=True)),
                ('EducationCess', models.CharField(blank=True, max_length=1000, null=True)),
                ('GrossTaxLiability', models.CharField(blank=True, max_length=1000, null=True)),
                ('Section89', models.CharField(blank=True, max_length=1000, null=True)),
                ('NetTaxLiability', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalIntrstPay', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotTaxPlusIntrstPay', models.CharField(blank=True, max_length=1000, null=True)),
                ('AdvanceTax', models.CharField(blank=True, max_length=1000, null=True)),
                ('TDS', models.CharField(blank=True, max_length=1000, null=True)),
                ('TCS', models.CharField(blank=True, max_length=1000, null=True)),
                ('SelfAssessmentTax', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalTaxesPaid', models.CharField(blank=True, max_length=1000, null=True)),
                ('BalTaxPayable', models.CharField(blank=True, max_length=1000, null=True)),
                ('ExcIncSec1038', models.CharField(blank=True, max_length=1000, null=True)),
                ('ExcIncSec1034', models.CharField(blank=True, max_length=1000, null=True)),
                ('IFSCCode', models.CharField(blank=True, max_length=1000, null=True)),
                ('BankName', models.CharField(blank=True, max_length=1000, null=True)),
                ('InterestPayable', models.CharField(blank=True, max_length=1000, null=True)),
                ('BankAccountNo', models.CharField(blank=True, max_length=1000, null=True)),
                ('UseForRefund', models.CharField(blank=True, max_length=1000, null=True)),
                ('RefundDue', models.CharField(blank=True, max_length=1000, null=True)),
                ('DepPayInvClmUndDednVIA', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotDon100PercentCash', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotDon100PercentOtherMode', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotDon100Percent', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotEligibleDon100Percent', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotDon50PercentNoApprReqdCash', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotDon50PercentNoApprReqdOtherMode', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotDon50PercentNoApprReqd', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotEligibleDon50Percent', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotDon100PercentApprReqdCash', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotDon100PercentApprReqdOtherMode', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotDon100PercentApprReqd', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotEligibleDon100PercentApprReqd', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotDon50PercentApprReqdCash', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotDon50PercentApprReqdOtherMode', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotDon50PercentApprReqd', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotEligibleDon50PercentApprReqd', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalDonationsUs80GCash', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalDonationsUs80GOtherMode', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalDonationsUs80G', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalEligibleDonationsUs80G', models.CharField(blank=True, max_length=1000, null=True)),
                ('SeniorCitizenFlag', models.CharField(blank=True, max_length=1000, null=True)),
                ('SelfAndFamily', models.CharField(blank=True, max_length=1000, null=True)),
                ('SelfAndFamilySeniorCitizen', models.CharField(blank=True, max_length=1000, null=True)),
                ('ParentsSeniorCitizenFlag', models.CharField(blank=True, max_length=1000, null=True)),
                ('HealthInsPremSlfFam', models.CharField(blank=True, max_length=1000, null=True)),
                ('ScheduleDI', models.CharField(blank=True, max_length=1000, null=True)),
                ('Parents', models.CharField(blank=True, max_length=1000, null=True)),
                ('PrevHlthChckUpSlfFamSrCtzn', models.CharField(blank=True, max_length=1000, null=True)),
                ('MedicalExpSlfFamSrCtzn', models.CharField(blank=True, max_length=1000, null=True)),
                ('ParentsSeniorCitizen', models.CharField(blank=True, max_length=1000, null=True)),
                ('HlthInsPremSlfFamSrCtzn', models.CharField(blank=True, max_length=1000, null=True)),
                ('HlthInsPremParents', models.CharField(blank=True, max_length=1000, null=True)),
                ('EligibleAmountOfDedn', models.CharField(blank=True, max_length=1000, null=True)),
                ('HlthInsPremParentsSrCtzn', models.CharField(blank=True, max_length=1000, null=True)),
                ('PrevHlthChckUpParentsSrCtzn', models.CharField(blank=True, max_length=1000, null=True)),
                ('MedicalExpParentsSrCtzn', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalTDSonSalaries', models.CharField(blank=True, max_length=1000, null=True)),
                ('TaxExmpIntInc', models.CharField(blank=True, max_length=1000, null=True)),
                ('TAN', models.CharField(blank=True, max_length=1000, null=True)),
                ('EmployerOrDeductorOrCollecterName', models.CharField(blank=True, max_length=1000, null=True)),
                ('IncChrgSal', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalTDSSal', models.CharField(blank=True, max_length=1000, null=True)),
                ('PrevHlthChckUpParents', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalTDSonOthThanSals', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalTDS3Details', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalSchTCS', models.CharField(blank=True, max_length=1000, null=True)),
                ('PrevHlthChckUpSlfFam', models.CharField(blank=True, max_length=1000, null=True)),
                ('TotalTaxPayments', models.CharField(blank=True, max_length=1000, null=True)),
                ('AssesseeVerName', models.CharField(blank=True, max_length=1000, null=True)),
                ('FatherName', models.CharField(blank=True, max_length=1000, null=True)),
                ('AssesseeVerPAN', models.CharField(blank=True, max_length=1000, null=True)),
                ('Capacity', models.CharField(blank=True, max_length=1000, null=True)),
                ('Place', models.CharField(blank=True, max_length=1000, null=True)),
                ('Date', models.CharField(blank=True, max_length=1000, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BUSINESS_INCOME_TAX_DASHBAORD_JSON_File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xmlfile', models.FileField(storage=core.storage_backends.PrivateMediaStorage(), upload_to='business_income_tax/xml_file/')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='business_income_dahsboard_registrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('pan_card_number', models.CharField(max_length=15)),
                ('reg_status', models.CharField(max_length=20)),
                ('xmlfile', models.FileField(upload_to='registration_xml_file')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Without XML Registration',
            },
        ),
        migrations.CreateModel(
            name='BUSINESS_GST_DASHBOARD_XMLFileData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legal_name', models.CharField(blank=True, max_length=500, null=True)),
                ('gst_number', models.CharField(blank=True, max_length=500, null=True)),
                ('gst_paid', models.CharField(blank=True, max_length=500, null=True)),
                ('itc', models.CharField(blank=True, max_length=500, null=True)),
                ('cash_legar', models.CharField(blank=True, max_length=500, null=True)),
                ('credit_legar', models.CharField(blank=True, max_length=500, null=True)),
                ('year', models.CharField(blank=True, max_length=500, null=True)),
                ('total_sales', models.CharField(blank=True, max_length=500, null=True)),
                ('total_gst', models.CharField(blank=True, max_length=500, null=True)),
                ('total_revenue', models.CharField(blank=True, max_length=500, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='business_gst_dashboard_checklist_selectbox_main_data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checklist_data', models.CharField(blank=True, max_length=500, null=True)),
                ('checklist_data_id', models.IntegerField()),
                ('checklist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='business.business_gst_dashboard_checklist_selectbox')),
            ],
            options={
                'verbose_name': 'business_gst_dashboard_checklist_selectbox_main_data gst checklist_selectbox_data',
            },
        ),
        migrations.CreateModel(
            name='BUSINESS_GST_DASHBAORD_XMLFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('json_file', models.FileField(storage=core.storage_backends.PrivateMediaStorage(), upload_to='business_dashbaord/gst/')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='business_gst_dashbaord_super_user_registrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gst_number', models.CharField(max_length=15)),
                ('reg_status', models.CharField(max_length=20)),
                ('xmlfile', models.FileField(upload_to='business_incometax_dashbaord_super_user_registrations')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'business_gst_dashbaord_super_user_registrations without XML Registration',
            },
        ),
        migrations.CreateModel(
            name='business_gst_dahsboard_registrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gst_number', models.CharField(blank=True, max_length=15, null=True)),
                ('reg_status', models.CharField(blank=True, max_length=20, null=True)),
                ('xmlfile', models.FileField(upload_to='registration_xml_file')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'business_gst_dahsboard_registrations Without XML Registration',
            },
        ),
    ]
